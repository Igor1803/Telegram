import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
import random
from config import TOKEN
from config import YANDEX_WEATHER_API_KEY
import requests

bot = Bot(token = TOKEN)
dp = Dispatcher()

@dp.message(F.photo)
async def res_photo(message: Message):
    print("–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!")
    responses = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(responses)
    await message.answer(rand_answ)


@dp.message(Command('photo'))
async def photo(message: Message):
    print("–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    responses = ['https://upload.wikimedia.org/wikipedia/commons/5/5e/Tesla-optimus-bot-gen-2-scaled_%28cropped%29.jpg', 'https://i.pinimg.com/originals/87/84/15/878415254c567bde84994c1e73dc52a2.png', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSbJ4uY_BFChBLYaa2zJ3R_JMKcjMB14XHIiQ&s', 'https://s0.rbk.ru/v6_top_pics/resized/960xH/media/img/6/97/756430096603976.jpg']
    rand_photo = random.choice(responses)
    await message.answer_photo(rand_photo, caption ='–≠—Ç–æ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')

@dp.message(F.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?')
async def aitext(message: Message):
    await message.answer("–ò–ò —ç—Ç–æ –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç")

@dp.message(Command("help"))
async def help(message: Message):
    await message.answer("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/start\n/help\n/photo\n/weather")

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, —è –±–æ—Ç!")


@dp.message(Command("weather"))
async def weather_handler(message: Message):
    lat, lon = 55.7558, 37.6176  # –ú–æ—Å–∫–≤–∞

    url = f'https://api.weather.yandex.ru/v2/forecast?lat={lat}&lon={lon}&lang=ru_RU'
    headers = {'X-Yandex-Weather-Key': YANDEX_WEATHER_API_KEY}
    response = requests.get(url, headers=headers)

    if response.status_code != 200:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É.")
        return

    data = response.json()
    fact = data.get('fact', {})
    condition = fact.get('condition', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    temp = fact.get('temp', '–Ω/–¥')

    conditions = {
        "clear": "–Ø—Å–Ω–æ ‚òÄÔ∏è",
        "partly-cloudy": "–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ üå§",
        "cloudy": "–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
        "overcast": "–ü–∞—Å–º—É—Ä–Ω–æ üå´",
        "rain": "–î–æ–∂–¥—å üåß",
        "light-rain": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üå¶",
    }

    desc = conditions.get(condition, condition)

    await message.answer(f"üåÜ –ú–æ—Å–∫–≤–∞\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {desc}")



async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


